An error occurred while executing the following cell:
------------------
# Bonnet's thm: d/dm E[f(z)] = E[d/dz f(z)] for z ~ N(m,v)
#Price's thm:  d/dv E[f(z)] = 0.5 E[d^2/dz^2 f(z)] for z ~ N(m,v)

# Note that we are taking derivatives wrt the parameters of the sampling distribution
# We rely on the fact that TFP Gaussian samples are reparameterizable

import numpy as np
import jax
import jax.numpy as jnp
try:
    import tensorflow_probability as tfp
except ModuleNotFoundError:
    %pip install -qq tensorflow-probability
    import tensorflow_probability as tfp
tfp = tfp.substrates.jax
tfd = tfp.distributions

key = jax.random.PRNGKey(0)
nsamples = 10000


def f(z):
  return jnp.square(z) # arbitrary fn

def expect_f(params):
  m, v = params
  dist = tfd.Normal(m, jnp.sqrt(v))
  zs = dist.sample(nsamples, key)
  return jnp.mean(f(zs))

def expect_grad(params):
  m, v = params
  dist = tfd.Normal(m, jnp.sqrt(v))
  zs = dist.sample(nsamples, key)
  grads = jax.vmap(jax.grad(f))(zs)
  return jnp.mean(grads)

def expect_grad2(params):
  m, v = params
  dist = tfd.Normal(m, jnp.sqrt(v))
  zs = dist.sample(nsamples, key)
  #g = jax.grad(f)
  #grads = jax.vmap(jax.grad(g))(zs)
  grads = jax.vmap(jax.hessian(f))(zs)
  return jnp.mean(grads)


params = (1.0, 2.0)


e1 = expect_grad(params)
e2 = expect_grad2(params)
print([e1, 0.5*e2])

grads = jax.grad(expect_f)(params)
print(grads)

assert np.allclose(e1, grads[0], atol=1e-1)
assert np.allclose(0.5 * e2, grads[1], atol=1e-1)


------------------

---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
/tmp/ipykernel_4694/994468337.py in <module>
     14     import tensorflow_probability as tfp
     15 tfp = tfp.substrates.jax
---> 16 tfd = tfp.distributions
     17 
     18 key = jax.random.PRNGKey(0)

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/python/internal/lazy_loader.py in __getattr__(self, item)
     51 
     52   def __getattr__(self, item):
---> 53     module = self._load()
     54     return getattr(module, item)
     55 

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/python/internal/lazy_loader.py in _load(self)
     38       self._on_first_access = None
     39     # Import the target module and insert it into the parent's namespace
---> 40     module = importlib.import_module(self.__name__)
     41     if self._parent_module_globals is not None:
     42       self._parent_module_globals[self._local_name] = module

~/miniconda3/envs/py37/lib/python3.7/importlib/__init__.py in import_module(name, package)
    125                 break
    126             level += 1
--> 127     return _bootstrap._gcd_import(name[level:], package, level)
    128 
    129 

~/miniconda3/envs/py37/lib/python3.7/importlib/_bootstrap.py in _gcd_import(name, package, level)

~/miniconda3/envs/py37/lib/python3.7/importlib/_bootstrap.py in _find_and_load(name, import_)

~/miniconda3/envs/py37/lib/python3.7/importlib/_bootstrap.py in _find_and_load_unlocked(name, import_)

~/miniconda3/envs/py37/lib/python3.7/importlib/_bootstrap.py in _load_unlocked(spec)

~/miniconda3/envs/py37/lib/python3.7/importlib/_bootstrap_external.py in exec_module(self, module)

~/miniconda3/envs/py37/lib/python3.7/importlib/_bootstrap.py in _call_with_frames_removed(f, *args, **kwds)

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/substrates/jax/__init__.py in <module>
     39 from tensorflow_probability.python.version import __version__
     40 # from tensorflow_probability.substrates.jax.google import staging  # DisableOnExport  # pylint:disable=line-too-long
---> 41 from tensorflow_probability.substrates.jax import bijectors
     42 from tensorflow_probability.substrates.jax import distributions
     43 from tensorflow_probability.substrates.jax import experimental

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/substrates/jax/bijectors/__init__.py in <module>
     17 # pylint: disable=unused-import,wildcard-import,line-too-long,g-importing-member
     18 
---> 19 from tensorflow_probability.substrates.jax.bijectors.absolute_value import AbsoluteValue
     20 from tensorflow_probability.substrates.jax.bijectors.ascending import Ascending
     21 # from tensorflow_probability.substrates.jax.bijectors.batch_normalization import BatchNormalization

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/substrates/jax/bijectors/absolute_value.py in <module>
     15 """AbsoluteValue bijector."""
     16 
---> 17 from tensorflow_probability.python.internal.backend.jax.compat import v2 as tf
     18 
     19 from tensorflow_probability.substrates.jax.bijectors import bijector

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/python/internal/backend/jax/__init__.py in <module>
     17 from tensorflow_probability.python.internal.backend.jax import __internal__
     18 from tensorflow_probability.python.internal.backend.jax import bitwise
---> 19 from tensorflow_probability.python.internal.backend.jax import compat
     20 from tensorflow_probability.python.internal.backend.jax import config
     21 from tensorflow_probability.python.internal.backend.jax import debugging

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/python/internal/backend/jax/compat.py in <module>
     16 
     17 from tensorflow_probability.python.internal.backend.jax import v1
---> 18 from tensorflow_probability.python.internal.backend.jax import v2
     19 from tensorflow_probability.python.internal.backend.jax.gen.tensor_shape import dimension_value
     20 

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/python/internal/backend/jax/v2.py in <module>
     25 from tensorflow_probability.python.internal.backend.jax import debugging
     26 from tensorflow_probability.python.internal.backend.jax import errors
---> 27 from tensorflow_probability.python.internal.backend.jax import linalg
     28 from tensorflow_probability.python.internal.backend.jax import nest
     29 from tensorflow_probability.python.internal.backend.jax import nn

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/python/internal/backend/jax/linalg.py in <module>
     26 try:
     27   # pylint: disable=unused-import
---> 28   from tensorflow_probability.python.internal.backend.jax.gen import adjoint_registrations as _adjoint_registrations
     29   from tensorflow_probability.python.internal.backend.jax.gen import cholesky_registrations as _cholesky_registrations
     30   from tensorflow_probability.python.internal.backend.jax.gen import inverse_registrations as _inverse_registrations

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/python/internal/backend/jax/gen/adjoint_registrations.py in <module>
     35 
     36 from tensorflow_probability.python.internal.backend.jax import numpy_math as math_ops
---> 37 from tensorflow_probability.python.internal.backend.jax.gen import linear_operator
     38 from tensorflow_probability.python.internal.backend.jax.gen import linear_operator_adjoint
     39 from tensorflow_probability.python.internal.backend.jax.gen import linear_operator_algebra

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/python/internal/backend/jax/gen/linear_operator.py in <module>
     54 from tensorflow_probability.python.internal.backend.jax import variables
     55 from tensorflow_probability.python.internal.backend.jax import linalg_impl as linalg
---> 56 from tensorflow_probability.python.internal.backend.jax.gen import linear_operator_algebra
     57 from tensorflow_probability.python.internal.backend.jax.gen import linear_operator_util
     58 from tensorflow_probability.python.internal.backend.jax.gen import slicing

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/python/internal/backend/jax/gen/linear_operator_algebra.py in <module>
     38 
     39 from tensorflow_probability.python.internal.backend.jax import ops
---> 40 from tensorflow_probability.python.internal.backend.jax import tf_inspect
     41 
     42 

~/miniconda3/envs/py37/lib/python3.7/site-packages/tensorflow_probability/python/internal/backend/jax/tf_inspect.py in <module>
     16 
     17 try:
---> 18   from tensorflow.python.util import tf_inspect as inspect  # pylint: disable=g-direct-tensorflow-import,g-import-not-at-top
     19 except ImportError:
     20   import inspect  # pylint: disable=g-import-not-at-top

~/miniconda3/envs/py37/lib/python3.7/importlib/_bootstrap.py in _find_and_load(name, import_)

~/miniconda3/envs/py37/lib/python3.7/importlib/_bootstrap.py in _find_and_load_unlocked(name, import_)

~/miniconda3/envs/py37/lib/python3.7/importlib/_bootstrap.py in _find_spec(name, path, target)

~/miniconda3/envs/py37/lib/python3.7/importlib/_bootstrap_external.py in find_spec(cls, fullname, path, target)

~/miniconda3/envs/py37/lib/python3.7/importlib/_bootstrap_external.py in _get_spec(cls, fullname, path, target)

~/miniconda3/envs/py37/lib/python3.7/importlib/_bootstrap_external.py in __iter__(self)

~/miniconda3/envs/py37/lib/python3.7/importlib/_bootstrap_external.py in _recalculate(self)

~/miniconda3/envs/py37/lib/python3.7/importlib/_bootstrap_external.py in _get_parent_path(self)

KeyError: 'tensorflow'
KeyError: 'tensorflow'
